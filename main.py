import os
import telebot
from flask import Flask, request
from telebot import types

TOKEN = 'YOUR TOKEN'
bot = telebot.TeleBot(token=TOKEN)
server = Flask(__name__)
text_messages = {
    'start':
        u'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {name}!\n'
        u'–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –æ–Ω–ª–∞–π–Ω –∑–∞–∫–∞–∑ (—ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏)üöÄ.\n\n'
        u'1. –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø–∞–∫–µ—Ç (–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ‚úÖ)\n'
        u'2. –í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É‚è∞\n'
        u'3. –û–ø–ª–∞—Ç–∏ –∑–∞–∫–∞–∑ (—ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ)‚öîÔ∏è\n',

    'help':
        u'–ü–æ–∫–∞ —á—Ç–æ —è –Ω–µ –∑–Ω–∞—é, —á–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤—ã–ø–µ–π –∫–æ—Ñ–µ!'
}
@bot.message_handler(commands=['start'])
def send_welcome(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
    bot.send_message(message.from_user.id, text_messages['start'].format(name=message.from_user.first_name),
                     reply_markup=markup)
@bot.message_handler(func=lambda message: True)
def choose_categories(message):
    cat_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cat_markup.row('–ü—Ä–∞–π—Å-–ª–∏—Å—Ç üí≤', '–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¶')
    cat_markup.row('–ê–∫—Ü–∏–∏ üéÅ', '–ö–æ–Ω—Ç–∞–∫—Ç—ã üìû')
    msg = bot.send_message(message.from_user.id, '–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=cat_markup)
    bot.register_next_step_handler(msg, choose_drink)
@bot.message_handler(func=lambda message: True)
def choose_drink(message):
    drink_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    if message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¶':
        drink_markup.row('–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å üåü', '–†–∞–±–æ—á–∞—è –≥—Ä—É–ø–ø–∞ üï¥')
        drink_markup.row('–û—Ñ–∏—Å üèãÔ∏è‚ÄçÔ∏è', '–ë—Ä–∏–≥–∞–¥–∞ üèÖ')
    elif message.text == '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç üí≤':
        drink_markup.row('Standard - M')
        drink_markup.row('Premium - L', 'Lite - S')
    elif message.text == '–ê–∫—Ü–∏–∏ üéÅ':
        drink_markup.row('All in')

    elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã üìû':
        drink_markup.row('–¢–µ–ª–µ—Ñ–æ–Ω', 'Instagram', '–ê–¥—Ä–µ—Å')
    drink_markup.row('–ù–∞–∑–∞–¥')

    msg = bot.send_message(message.from_user.id, '–ß—Ç–æ –≤–∞–º —É–≥–æ–¥–Ω–æ, –≥–æ—Å–ø–æ–¥–∏–Ω(–∂–∞)', reply_markup=drink_markup)
    bot.register_next_step_handler(msg, choose_size)


def choose_size(message):
    size_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if message.text == '–ù–∞–∑–∞–¥':
        choose_categories(message)
        return
    else:
        if message.text == '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å üåü':
            bot.send_message(message.from_user.id, 'Jcyjdfntkm', reply_markup=size_markup)

        if message.text == '–†–∞–±–æ—á–∞—è –≥—Ä—É–ø–ø–∞ üï¥':
            bot.send_message(message.from_user.id, '–í—Å–µ –Ω–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–æ —Å—Ç–∞–∂–µ–º –Ω–µ –º–µ–Ω–µ–µ 3-—Ö –ª–µ—Ç', reply_markup=size_markup)

        if message.text == 'Standard - M':
            size_markup.row('View Examples')
            msg = bot.send_message(message.from_user.id, '—Ü–µ–Ω–∞ - 10000 –∑–∞ –º^2.\n –í —Ü–µ–Ω—É –≤—Ö–æ–¥–∏—Ç:\n'
                                                   '- –ß–µ—Ä—Ç–µ–∂\n'
                                                   '- –û–±—Ä–∞–±–æ—Ç–∫–∞...', reply_markup=size_markup)
        if message.text == 'Premium - L':
            msg = bot.send_message(message.from_user.id, '—Ü–µ–Ω–∞ - 15000 –∑–∞ –º^2', reply_markup=size_markup)
            size_markup.row('View Examples')

        if message.text == 'Lite - S':
            msg = bot.send_message(message.from_user.id, '—Ü–µ–Ω–∞ - 6000 –∑–∞ –º^2', reply_markup=size_markup)
            size_markup.row('View Examples')

        markup = types.InlineKeyboardMarkup()
        if message.text == 'Instagram':
            btn_my_site = types.InlineKeyboardButton(text='–ù–∞—à —Å–∞–π—Ç', url='https://www.instagram.com/zelux.kz/?hl=en')
            markup.add(btn_my_site)
            bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç.", reply_markup=markup)

        if message.text == '–¢–µ–ª–µ—Ñ–æ–Ω':
            bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=size_markup)

        if message.text == '–û—Ñ–∏—Å üèãÔ∏è‚ÄçÔ∏è':
            bot.send_message(message.chat.id, "–ê–¥—Ä–µ—Å", reply_markup=size_markup)
        if message.text == '–ë—Ä–∏–≥–∞–¥–∞ üèÖ':
            bot.send_message(message.chat.id, "–£ –Ω–∞—Å —Ä–∞–±–æ—Ç–∞–µ —Å—Ä–∞–∑—É n –∫–æ–ª-–≤–æ –±—Ä–∏–≥–∞–¥, –≤—Å—è —Ä–∞–±–æ—Ç–∞ —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç—Å—è –¥–µ–∂—É—Ä–Ω—ã–º –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º",
                             reply_markup=size_markup)
        if message.text == 'All in':
            bot.send_message(message.chat.id, "–ê–∫—Ü–∏—è –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ + –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è + –æ—Ç–¥–µ–ª–∫–∞",
                             reply_markup=size_markup)
        if message.text == '–ê–¥—Ä–µ—Å':
            bot.send_message(message.chat.id, "–ê–¥—Ä–µ—Å",
                             reply_markup=size_markup)

# SERVER SIDE
@server.route('/' + TOKEN, methods=['POST'])
def getMessage():
   bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
   return "!", 200
@server.route("/")
def webhook():
   bot.remove_webhook()
   bot.set_webhook(url='https://adbotcode.herokuapp.com/' + TOKEN)
   return "!", 200
if __name__ == "__main__":
   server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))